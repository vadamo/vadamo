head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2010.05.21.05.12.01;	author Kyle;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@class UsersController < ApplicationController
  before_filter :authenticate, :only => [:index, :edit, :update, :destroy]
  before_filter :correct_user, :only => [:edit, :update]
  before_filter :admin_user,   :only => :destroy

  def show
    @@user = User.find(params[:id])
#    @@microposts = @@user.microposts.paginate(:page => params[:page])
    @@artworks = @@user.artworks.paginate(:page => params[:page])
    @@title = @@user.name
  end

  def new
    @@user = User.new
    @@title = "Sign up"
  end

  def create
    @@user = User.new(params[:user])
    if params[:secret_code][:secret_alpha_code] != "alpha732"
      flash[:failure] = "Vadamo.com is currently in a private beta. Please check back again soon for updates."
      @@title = "fail code"
      render 'new'
    else
      if @@user.save
        sign_in @@user
        flash[:success] = "Welcome to the Sample App!"
        redirect_to @@user
      else
        @@title = "Sign up"
        render 'new'
      end
    end
  end

  def edit
    @@title = "Edit user"
  end

  def update
    if @@user.update_attributes(params[:user])
      flash[:success] = "Profile updated."
      redirect_to @@user
    else
      @@title = "Edit user"
      render 'edit'
    end
  end

  def index
    @@title = "All users"
    @@users = User.paginate(:page => params[:page])
  end

  def destroy
    user = User.find(params[:id]).destroy
    flash[:success] = "User destroyed."
    redirect_to users_path
  end

  private

    def correct_user
      @@user = User.find(params[:id])
      redirect_to(root_path) unless current_user?(@@user)
    end

    def admin_user
      redirect_to(root_path) unless current_user.admin?
    end
end
@
